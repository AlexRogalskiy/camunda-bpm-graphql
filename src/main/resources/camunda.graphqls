type Query {

    tasks(
        assignee: String @doc(d: "Only select tasks which are assigned to the given user.")
        name: String @doc(d: "Only select tasks with the given name")
        nameLike: String @doc(d: "Only select tasks with a name matching the parameter. The syntax is that of SQL: for example usage: nameLike(%activiti%)")
    )
    : [TaskEntity]
    @doc(d: "Allows programmatic querying of Tasks based on the public Interface org.camunda.bpm.engine.task.TaskQuery")

    processesInstances: [ProcessInstance]
}

type Mutation {
    setAssignee(
        taskEntityId: String!
        assignee: String!
    )
    : TaskEntity
    @doc(d: "sets the assignee of a Task")
}


type TaskEntity {
    id: String
    name: String
    description: String
    priority: Int
    owner: String
    assignee: String
    processInstanceId: String
    executionEntity: ExecutionEntity
    processDefinitionId: String
    processDefinition: ProcessDefinition
    caseInstanceId: String
    caseExecutionId: String
    caseDefinitionId: String
    executionId: String
    createTime: String
    taskDefinitionKey: String
    parentTaskId: String
    isSuspended: Boolean
    tenantId: String
}

type ProcessDefinition {
    id: String
    name: String
}